/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if (head == null || head.next == null || k == 0) return head;
        int size = 0;
        ListNode ln = head;
        while (ln != null) {
            ln = ln.next;
            size++;
        }
        k %= size;
        if (k == 0) return head;
        ListNode temp = head;
        int count = 1;
        while (count < size-k) {
            temp = temp.next;
            count++;
        }
        ListNode newHead = temp.next;
        temp.next = null;
        ListNode retHead = newHead;
        while (newHead.next != null) {
            newHead = newHead.next;
        }
        newHead.next = head;
        head = retHead;
        return retHead;
    }
}
