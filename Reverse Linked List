/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseList(ListNode head) {
        ListNode prev = null;
        ListNode curr = head;
        ListNode next;
        while (curr != null) {
            next = curr.next; // for moving curr forward.
            curr.next = prev; // linking backward
            prev = curr; // prev move 1 node forward.
            curr = next; // curr moved 1 nodde forward.
        }
        head = prev; // prev is the last node (of original LL) which has been made the head node.
        return head;
    }
}
