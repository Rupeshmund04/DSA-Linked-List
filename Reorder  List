/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public static ListNode getMid(ListNode head) {
        ListNode slow = head, fast = head.next;
        while (fast != null && fast.next != null) {
            slow = slow.next;
            fast = fast.next.next;
        }
        return slow;
    }
    public static ListNode reverse(ListNode head) {
        ListNode curr = head;
        ListNode prev = null;
        ListNode next;
        while (curr != null) {
            next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = next;
        }
        return prev;
    }
    public void reorderList(ListNode head) {
        ListNode mid = getMid(head);
        ListNode R = mid.next;
        mid.next = null; // break link
        ListNode right = reverse(R);
        ListNode left = head;
        ListNode leftNext, rightNext;
        while (left != null && right != null) {
            leftNext = left.next;
            left.next = right;
            rightNext = right.next;
            right.next = leftNext;
            left = leftNext;
            right = rightNext;
        }
    }
}
